"""
https://contest.yandex.ru/contest/29847/problems/A/

В данной задаче необходимо реализовать тесты на простоту Ферма и Миллера-Рабина, а также посчитать количество
кандидатов указывающих на потенциальную простоту числа или наоборот на его составную природу.

Формат ввода
В качестве входных данных имеется единственное число n, которое мы собираемся проверить на простоту.

Формат вывода
Результатом работы программы является лог с описанием количества тестов указывающих на простоту/составную
природу числа. В первой строке вывода даются результаты по тестам Миллера-Рабина - является ли число простым
(True если да, False если нет), далее через пробел: количество кандидатов на составное число, количество тестов
пройденных по первому условию и количество пройденных тестов по второму условию.
Во второй строке ввода находятся похожие результаты по тесту Ферма: является ли число простым (True если да,
False если нет), далее через пробел число составных кандидатов и пройденных тестов.

Пример 1
Ввод
8273
Вывод
Miller-Rabin test: True 0 517 7755
Fermat test: True 0 8272

Пример 2
Ввод
97
Вывод
Miller-Rabin test: True 0 3 93
Fermat test: True 0 96
"""


def decompose(n: int) -> tuple[int, int]:
    """Функция разложения числа на нечетное число и степень двойки"""
    s = 0

    while n % 2 == 0:
        n //= 2
        s += 1

    return n, s


def primality_tests(n: int) -> tuple[list[int], int]:
    """Функция проверки числа на простоту с помощью тестов Ферма и Миллера-Рабина"""
    fermat_successful = 0
    miller_rabin_successful = [0, 0]

    d, s = decompose(n - 1)

    for a in range(1, n):
        # Тест Ферма
        if pow(a, n - 1, n) == 1:
            fermat_successful += 1

        # Проверяем первое условие Миллера-Рабина
        if pow(a, d, n) == 1:
            miller_rabin_successful[0] += 1

        # Проверяем второе условие Миллера-Рабина
        for r in range(s):
            if pow(a, (2**r) * d, n) == -1 % n:
                miller_rabin_successful[1] += 1
                break

    return miller_rabin_successful, fermat_successful
