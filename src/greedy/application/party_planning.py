"""
Планирование вечеринки в компании. Для этого нужно выбрать максимальное количество гостей так, чтобы не было
двух гостей, один из которых работник, а второй - его прямой начальник.

Формат входных данных: словарь, где ключ - имя начальника, а значение - список имен его подчиненных.
Формат выходных данных: множество имен гостей, которые можно пригласить на вечеринку.
"""


def party_planning(tree: dict[str, list[str]]) -> set[str]:
    """
    Решение задачи планирования вечеринки. Сложность O(V + E).

    Принцип работы:
    Задача является классической задачей на поиск максимального независимого множества в дереве.
    Для решения задачи используется алгоритм поиска в глубину (DFS) + жадный подход. В начале выбирается
    самый главный начальник, затем для каждого подчиненного начальника выбираются его подчиненные и т.д.
    """
    guests = set()
    stack = [next(iter(tree))]

    while stack:
        person = stack.pop()
        guests.add(person)

        for subordinate in tree.get(person, []):
            for grand_subordinate in tree.get(subordinate, []):
                if grand_subordinate not in guests:
                    stack.append(grand_subordinate)

    return guests
