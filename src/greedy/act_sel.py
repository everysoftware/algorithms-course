"""
Задача о выборе заявок. Дано множество заявок, каждая из которых представлена отрезком на прямой.
Необходимо выбрать максимальное количество заявок так, чтобы никакие две не пересекались.

Формат ввода
В первой строке задано целое число n (1 ≤ n ≤ 100000) — количество заявок.
Далее в n строках даны пары целых чисел li и ri (−10^9 ≤ li ≤ ri ≤ 10^9) — координаты левого и правого концов отрезков.

Формат вывода
Выведите выбранные заявки.
"""


def act_sel(acts: list[tuple[int, int]]) -> list[tuple[int, int]]:
    """
    Решает задачу о выборе заявок. Сложность: O(NlogN).
    Принцип работы:
    1. Сортируем заявки по правому концу отрезка.
    2. Добавляем в решение первую заявку.
    3. Пропускаем все заявки, которые пересекаются с текущей.
    4. Добавляем в решение следующую заявку.
    5. Повторяем шаги 3-4, пока не закончатся заявки.
    """
    n = len(acts)
    acts.sort(key=lambda x: x[1])
    selection = []

    i = 0
    while i < n:
        act = acts[i]
        selection.append(act)
        # Пропускаем пересекающиеся отрезки.
        while i < n and acts[i][0] < act[1]:
            i += 1

    return selection


def act_sel_other_approach(acts: list[tuple[int, int]]) -> list[tuple[int, int]]:
    """
    Решает задачу о выборе заявок. Сложность: O(NlogN).
    """
    acts.sort(key=lambda x: x[1])
    selection = [acts[0]]

    for act in acts:
        if act[0] >= selection[-1][1]:
            selection.append(act)

    return selection
