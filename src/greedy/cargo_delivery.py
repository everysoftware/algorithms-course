"""
Вы управляете грузовым кораблем, который может перевозить грузы общим весом до W тонн.
У вас есть список из N грузов, каждый из которых имеет определенный вес и стоимость доставки.
Грузы можно разделить на части.

Ваша задача - определить, какие грузы (или их части) следует взять на борт, чтобы максимизировать общую
стоимость доставки.

Входные данные: Первая строка содержит два целых числа N и W - количество грузов и вместимость корабля
соответственно. Каждая из следующих N строк содержит два целых числа c и w - стоимость доставки и вес груза
соответственно.

Выходные данные: Выведите максимальную стоимость доставки грузов, которые можно поместить на корабль,
с точностью не менее трёх знаков после запятой.

Пример:
Ввод:
3 50
60 20
100 50
120 30
Вывод:
180.000

Эта задача также известна как задача о жадном рюкзаке. Например, https://stepik.org/lesson/13238/step/10?unit=3424.
"""


def cargo_delivery(w: int, items: list[tuple[int, int]]) -> float:
    """Решает задачу о непрерывном рюкзаке. Сложность O(NlogN)."""
    items.sort(key=lambda x: x[0] / x[1], reverse=True)

    # На каждом шаге берём максимальный предмет по удельной стоимости (стоимости предмета за кг).
    max_cost = 0.0
    for cost, weight in items:
        # Если груз влезает, берём его целиком.
        if weight <= w:
            amount = min(w, weight)
            max_cost += amount * (cost / weight)
            w -= amount

        # Если груз не влезает, берём его часть.
        else:
            max_cost += w * (cost / weight)
            break

    return max_cost
