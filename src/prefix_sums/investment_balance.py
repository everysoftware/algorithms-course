"""
Представьте, что вы инвестор на фондовом рынке. У вас есть история транзакций за определенный период времени (N дней).
Каждый день вы либо покупаете акции (положительное число), либо продаете их (отрицательное число). Ваша задача -
найти количество непрерывных периодов времени, когда сумма ваших транзакций за этот период равна нулю.
Это может означать, что вы вернулись к своему первоначальному балансу после серии покупок и продаж.

Формат ввода: В первой строке задано число N (1 ≤ N ≤ 10^6) - количество дней. Во второй строке заданы N целых чисел,
каждое из которых по модулю не превосходит 10^9 - это ваши ежедневные транзакции.

Формат вывода: Выведите одно число - количество периодов, когда сумма ваших транзакций за этот период равна нулю.

Пример:
Ввод
7
1 2 3 -3 1 2 3
Вывод
2
Пояснение
Непрерывные периоды, когда сумма ваших транзакций равна нулю: [3, -3], [-3, 1, 2].
Это означает, что были два периода, когда вы вернулись к своему первоначальному балансу после серии покупок и продаж.
"""


def investment_balance(a: list[int]) -> int:
    """Префиксные суммы. Сложность O(N)."""
    count = 0
    prefix_sums = {}
    """prefix_sums[i] - количество непрерывных периодов, когда сумма транзакций равна i."""
    curr_sum = 0

    for num in a:
        # Обновляем текущую сумму
        curr_sum += num

        # Если текущая сумма равна нулю, то увеличиваем счетчик на один
        if curr_sum == 0:
            count += 1

        # Если текущая сумма уже встречалась ранее, то увеличиваем счетчик на количество ее появлений
        if curr_sum in prefix_sums:
            count += prefix_sums[curr_sum]

        # Добавляем текущую сумму в словарь или увеличиваем ее счетчик на один
        prefix_sums[curr_sum] = prefix_sums.get(curr_sum, 0) + 1

    return count
