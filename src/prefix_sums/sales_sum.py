"""
Авторская задача (И. Стасевич).

Представьте, что вы владелец магазина и хотите анализировать свои ежедневные продажи. У вас есть массив,
где каждый элемент представляет собой общую сумму продаж за день. Вы хотите узнать общую сумму продаж за любой
заданный период времени (например, за последние 7, 30 или 90 дней).

Входные данные:
В первой строке 2 целых числа n и m (1 ≤ n, m ≤ 10^5) - количество дней и количество запросов.
Во второй строке n целых чисел sales, где каждый элемент представляет сумму продаж за i-й день (0 ≤ sales[i] ≤ 10^6).
В следующих m строках содержатся запросы. Каждый запрос представляет собой пару целых чисел i и j (0 ≤ i ≤ j < n),

Выходные данные:
Для каждого запроса из списка queries верните общую сумму продаж за заданный период времени.

Пример:
100 200 300 400 500
0 2
1 3
0 4
Вывод:
600 900 1500
"""


def sales_sum(sales: list[int], queries: list[tuple[int, int]]) -> list[int]:
    """Префиксные суммы. Сложность O(N + M)."""
    n = len(sales)

    # Подсчитываем префиксные суммы
    prefix_sum = [0] * (n + 1)
    """prefix_sum[i] - общая сумма продаж за префикс длины i."""
    for i in range(1, n + 1):
        prefix_sum[i] = prefix_sum[i - 1] + sales[i - 1]

    # Подсчитываем ответы на запросы
    answers = []
    for left, right in queries:
        answers.append(prefix_sum[right + 1] - prefix_sum[left])

    return answers
