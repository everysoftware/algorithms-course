import pytest

from src.n_graphs.greed_stone import greed_stone


@pytest.mark.parametrize(
    ("matrix", "expected"),
    [
        # Тестовый случай 1: Матрица 2x2, где все города связаны.
        ([[0, 1], [1, 0]], (2, [0, 1, 0])),
        # Тестовый случай 2: Матрица 3x3, где все города связаны.
        ([[0, 1, 2], [1, 0, 1], [2, 1, 0]], (4, [0, 1, 2, 0])),
        # Тестовый случай 3: Матрица 3x3, где один из городов не связан с остальными.
        (
            [
                [0, 10**20, 2],
                [10**20, 0, 10**20],
                [2, 10**20, 0],
            ],
            None,
        ),
        # Тестовый случай 4: Матрица 4x4, где все города связаны.
        (
            [[0, 1, 2, 3], [1, 0, 1, 2], [2, 1, 0, 1], [3, 2, 1, 0]],
            (6, [0, 1, 2, 3, 0]),
        ),
        # Тестовый случай 5: Матрица 1x1, где город не связан с самим собой.
        ([[0]], None),
        (
            [[0, 1, 2, 3], [4, 0, 5, 6], [7, 8, 0, 9], [10, 11, 12, 0]],
            (25, [0, 1, 2, 3, 0]),
        ),
        (
            [
                [0, 6, 0, 0, 38, 41, 15, 19, 0, 0],
                [39, 0, 22, 0, 0, 0, 0, 0, 15, 0],
                [0, 31, 0, 0, 38, 48, 31, 0, 0, 0],
                [0, 0, 25, 0, 0, 0, 0, 0, 16, 0],
                [0, 22, 0, 0, 0, 5, 0, 0, 43, 25],
                [40, 0, 35, 20, 0, 0, 5, 2, 43, 0],
                [0, 0, 0, 3, 0, 27, 0, 35, 26, 49],
                [44, 0, 12, 40, 32, 4, 10, 0, 43, 0],
                [23, 0, 11, 0, 0, 41, 6, 9, 0, 0],
                [43, 16, 37, 0, 31, 0, 0, 34, 0, 0],
            ],
            (206, [7, 5, 6, 3, 8, 2, 1, 0, 4, 9, 7]),
        ),
    ],
)
def test_greed_stone(matrix: list[list[int]], expected: tuple[int, list[int]] | None) -> None:
    assert greed_stone(matrix) == expected
